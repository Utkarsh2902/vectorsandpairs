ðŸ˜ŽWAP to perform vector using iterators

#include <bits/stdc++.h>
using namespace std;
int main()
{
     vector<int> v={1,2,3};
     for(int i=0;i<v.size();i++)
     {
         cout<<v[i];
     }
     //otherway to call
     vector<int> v={1,2,3};
    vector<int>::iterator it;
    for(it=v.begin();it!=v.end();it++)
    {
    cout<<(*it);
    }
    
    return 0;
}




ðŸ˜ŽWAP to perform vector and pairs using iterators
#include <bits/stdc++.h>
using namespace std;
int main()
{
     
     vector<pair<int,int>> v={{1,2},{2,3},{1,1}};
    vector<pair<int,int>>::iterator it;
    for(it=v.begin();it!=v.end();it++)
    {
    //cout<<(*it).first<<endl<<(*it).second<<endl;
    //other way to impliment iterator 
    cout<<(it->first)<<" "<<(it->second);
        
    }
    
    return 0;
}






ðŸ˜ŽWAP to perform RANGE based loops and auto keywords in vector and pairs using iterators
#include <bits/stdc++.h>
using namespace std;
int main()
{
     
     vector<pair<int,int>> v={{1,2},{2,3},{1,1}};
    //vector<pair<int,int>>::iterator it;
   /* for(it=v.begin();it!=v.end();it++)
    {
    //cout<<(*it).first<<endl<<(*it).second<<endl;
    //other way to impliment iterator 
    cout<<(it->first)<<" "<<(it->second);
        
    }*/
    //range based loop
    /*for(pair<int,int> value: v)
    {
        cout<<value.first<<endl<<value.second;
   }*/
   //use of auto keyword
     for(auto value: v)
    {
        cout<<value.first<<endl<<value.second;
   }
    return 0;
}
